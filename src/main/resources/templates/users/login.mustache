{{>layouts/header}}

<div align="center">
    <H1>로그인 화면 입니다.</H1>

</div>
<br>

<form class="container">
    <div class="form-group" align="center">
        <h2><strong>회원 명</strong></h2>
        <input name="userName" type="text" class="form-control" id="input-userName" placeholder="회원명을 입력하세요">
    </div>
    <br>
    <br>
    <br>

    <div class="form-group" align="center">
        <h2><strong>비밀번호</strong></h2>
        <input name="password" class="form-control" id="input-password" placeholder="비밀번호를 입력하세요">
    </div>
    <br>
    <div align="center">
        <button type="button" class="btn btn-primary" id="user-create-btn">로그인</button>

    </div>
</form>

<br>
<br>

<div align="center">
    <form class="container" form action="/" method="get">
        <br>
        <button class="btn btn-success btn-lg" type="submit" style="width: 25%">홈 화면으로</button>
    </form>
</div>

<Script>
    // user 객체 생성
    let user = {
        // 초기화(이벤트 등록) 메소드
        init: function () {

            var _this = this;

            // 버튼 클릭 시 createBtn 이 생성됨
            // querySelector 는 id를 기준으로 값을 가져온다.
            const createBtn = document.querySelector('#user-create-btn');

            // 생성 버튼 클릭 시, 동작 할 메소드를 연결
            createBtn.addEventListener('click', _this.create);
        },


        create: function () {
            // form 데이터를 JSON으로 만듬

            // data 객체를 만든다. 일종의 dto 객체 형식으로 만드는 것과 비슷한 느낌이다.
            let data = {
                userName: document.querySelector('#input-userName').value.trim(),
                password: document.querySelector('#input-password').value.trim(),
            };
            console.log(data);
            if (data.userName == '') {
                alert('회원명을 입력해주세요');
                return;
            }
            if (data.password == '') {
                alert('비밀번호를 입력해주세요');
                return;
            }

            // 데이터 생성 요청을 보냄
            axios.post("/api/v1/users/login",
                    JSON.stringify(data), { // dto 처럼 만든 객체 data를 stringify 함수로 JSON 형식으로 만든다.
                        headers: {
                            'Content-Type': 'application/json' //json 타입인 것을 설정한다.
                        }
                    }
            ).then((response) => {
                localStorage.setItem("token", response.data.result["jwt"]);
                alert("로그인이 완료되었습니다.");
                window.location.href = '/';
            }).catch((error) => {
                console.log(error.response.data.result["errorCode"])
                if (error.response.data.result["errorCode"] == "USERNAME_NOT_FOUND") {
                    alert("가입된 회원이 아닙니다. 회원가입 후 로그인 해주세요");
                }else if(error.response.data.result["errorCode"]=="INVALID_PASSWORD"){
                    alert("비밀번호가 일치하지 않습니다. 다시 입력해주세요");
                }

            });
        }
    };
    // 객체 초기화
    user.init();
</script>